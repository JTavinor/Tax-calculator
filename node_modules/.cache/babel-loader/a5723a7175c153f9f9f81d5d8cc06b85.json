{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/josephtavinor/jtavinor_tax_calculator/src/components/taxCalculator.jsx\";\nimport React, { Component } from \"react\";\nimport logo from \"../untied_logo.png\";\nimport TaxTable from \"./taxTable\";\n\nclass TaxCalculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toCalculate: \"takeHome\",\n      query: 0\n    };\n  }\n\n  renderInputLabel() {\n    if (this.state.toCalculate === \"salary\") return \"What is your desired take-home pay?\";\n    return \"What is your current salary?\";\n  }\n\n  handleSearchQuery(e) {\n    const query = Math.abs(parseInt(e.currentTarget.value));\n    console.log(query);\n    if (query == NaN) return this.setState({\n      query: 0\n    });\n    this.setState({\n      query\n    });\n  }\n\n  render() {\n    const {\n      query,\n      toCalculate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to the Untied tax calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"With this calculator you can either:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Calculate your take-home pay from a salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"See what salary you should demand in order to acheive a certain take-home pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select what you would like to calculate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculationSelect\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"leftCalculationButton\",\n            onChange: () => this.setState({\n              toCalculate: \"takeHome\"\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"takeHome\",\n              name: \"calculation\",\n              value: \"takeHome\",\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"takeHome\",\n              children: \"Take-home pay from salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rightCalculationButton\",\n            onChange: () => this.setState({\n              toCalculate: \"salary\"\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"salary\",\n              name: \"calculation\",\n              value: \"salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"salary\",\n              children: \"Salary from take-home pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"income\",\n          style: {\n            marginRight: \"1%\"\n          },\n          children: [this.renderInputLabel(), \" (GBP)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"income\",\n          type: \"number\",\n          min: 0,\n          step: \"1000\",\n          style: {\n            marginLeft: \"1%\"\n          },\n          onChange: e => this.handleSearchQuery(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaxTable, {\n          query: query,\n          toCalculate: toCalculate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TaxCalculator;","map":{"version":3,"sources":["/Users/josephtavinor/jtavinor_tax_calculator/src/components/taxCalculator.jsx"],"names":["React","Component","logo","TaxTable","TaxCalculator","state","toCalculate","query","renderInputLabel","handleSearchQuery","e","Math","abs","parseInt","currentTarget","value","console","log","NaN","setState","render","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"../untied_logo.png\";\n\nimport TaxTable from \"./taxTable\";\n\nclass TaxCalculator extends Component {\n  state = { toCalculate: \"takeHome\", query: 0 };\n\n  renderInputLabel() {\n    if (this.state.toCalculate === \"salary\")\n      return \"What is your desired take-home pay?\";\n    return \"What is your current salary?\";\n  }\n\n  handleSearchQuery(e) {\n    const query = Math.abs(parseInt(e.currentTarget.value));\n    console.log(query);\n    if (query == NaN) return this.setState({ query: 0 });\n    this.setState({\n      query,\n    });\n  }\n\n  render() {\n    const { query, toCalculate } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"logoDiv\">\n          <img src={logo} className=\"logo\" />\n        </div>\n        <div className=\"mainDiv\">\n          <h1>Welcome to the Untied tax calculator</h1>\n          <hr />\n          <h2>With this calculator you can either:</h2>\n          <ul>\n            <li>Calculate your take-home pay from a salary</li>\n            <li>\n              See what salary you should demand in order to acheive a certain\n              take-home pay\n            </li>\n          </ul>\n          <hr />\n          <h3>Select what you would like to calculate:</h3>\n          <div className=\"calculationSelect\">\n            <span\n              className=\"leftCalculationButton\"\n              onChange={() => this.setState({ toCalculate: \"takeHome\" })}\n            >\n              <input\n                type=\"radio\"\n                id=\"takeHome\"\n                name=\"calculation\"\n                value=\"takeHome\"\n                defaultChecked\n              />\n              <label for=\"takeHome\">Take-home pay from salary</label>\n            </span>\n\n            <span\n              className=\"rightCalculationButton\"\n              onChange={() => this.setState({ toCalculate: \"salary\" })}\n            >\n              <input\n                type=\"radio\"\n                id=\"salary\"\n                name=\"calculation\"\n                value=\"salary\"\n              />\n              <label for=\"salary\">Salary from take-home pay</label>\n            </span>\n          </div>\n          <br />\n          <label for=\"income\" style={{ marginRight: \"1%\" }}>\n            {this.renderInputLabel()}\n            {\" (GBP)\"}\n          </label>\n          <input\n            id=\"income\"\n            type=\"number\"\n            min={0}\n            step=\"1000\"\n            style={{ marginLeft: \"1%\" }}\n            onChange={(e) => this.handleSearchQuery(e)}\n          />\n          <TaxTable query={query} toCalculate={toCalculate} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaxCalculator;\n"]},"metadata":{},"sourceType":"module"}