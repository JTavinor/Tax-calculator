{"ast":null,"code":"const _ = require(\"lodash\");\n\nclass Calculator {\n  constructor(taxYearInfo) {\n    this.pA = taxYearInfo.pA;\n    this.higherRateStart = taxYearInfo.higherRateStart;\n    this.pAReductionStart = taxYearInfo.pAReductionStart;\n    this.additionalRateStart = taxYearInfo.additionalRateStart;\n    this.pAReductionRate = taxYearInfo.pAReductionRate;\n    this.basicRate = taxYearInfo.basicRate;\n    this.higherRate = taxYearInfo.higherRate;\n    this.additionalRate = taxYearInfo.additionalRate;\n    this.nILowerLimit = taxYearInfo.nILowerLimit;\n    this.nIUpperLimit = taxYearInfo.nIUpperLimit;\n    this.nILowerRate = taxYearInfo.nILowerRate;\n    this.nIUpperRate = taxYearInfo.nIUpperRate;\n  }\n\n  salaryAtBasicRate(salary) {\n    let salaryAtBasicRate;\n    if (salary <= this.higherRateStart) salaryAtBasicRate = salary - this.pA;else if (salary <= this.pAReductionStart) salaryAtBasicRate = this.higherRateStart - this.pA;else if (salary <= this.pAReductionStart + this.pA / this.pAReductionRate) {\n      const reduction = Math.floor((salary - this.pAReductionStart) * this.pAReductionRate);\n      salaryAtBasicRate = this.higherRateStart - this.pA + reduction;\n    } else salaryAtBasicRate = this.higherRateStart;\n    return salaryAtBasicRate;\n  }\n\n  salaryAtHigherRate(salary) {\n    let salaryAtHigherRate;\n    if (salary <= this.higherRateStart) salaryAtHigherRate = 0;else if (salary <= this.additionalRateStart) salaryAtHigherRate = salary - this.higherRateStart;else salaryAtHigherRate = this.additionalRateStart - this.higherRateStart;\n    return salaryAtHigherRate;\n  }\n\n  salaryAtAdditionalRate(salary) {\n    return salary <= this.additionalRateStart ? 0 : salary - this.additionalRateStart;\n  }\n\n  incomeTax(salary) {\n    let incomeTax = this.salaryAtBasicRate(salary) * this.basicRate + this.salaryAtHigherRate(salary) * this.higherRate + this.salaryAtAdditionalRate(salary) * this.additionalRate;\n    incomeTax = _.round(incomeTax, 2);\n    return incomeTax;\n  }\n\n  nationalInsurance(salary) {\n    const lowerLimit = this.nILowerLimit * 12;\n    const upperLimit = this.nIUpperLimit * 12;\n    const lowerRate = this.nILowerRate;\n    const upperRate = this.nIUpperRate;\n    let nI;\n\n    if (salary <= lowerLimit) {\n      nI = 0;\n    } else if (salary <= upperLimit) {\n      nI = (salary - lowerLimit) * lowerRate;\n    } else {\n      nI = (salary - upperLimit) * upperRate + (upperLimit - lowerLimit) * lowerRate;\n    }\n\n    nI = _.round(nI, 2);\n    return nI;\n  }\n\n  takeHomePay(salary) {\n    return salary - this.incomeTax(salary) - this.nationalInsurance(salary);\n  }\n\n  salaryFromTakeHome(income) {\n    let salary;\n    const lowerLimit = this.nILowerLimit * 12; // 1) Income less than NI lower limit\n\n    if (income <= lowerLimit) {\n      salary = income;\n    } // 2) Income within NI Lower limit\n    // 2a) Income still in personal allowance\n    else if (income <= this.takeHomePay(12500)) {\n        salary = (25 * income - 3 * lowerLimit) / 22;\n      } // 2b) Income within basic range\n      else if (income <= this.takeHomePay(50000)) {\n          salary = (25 * income - 3 * lowerLimit - 62500) / 17;\n        } // 2c) Income within higher rate\n        else if (income <= this.takeHomePay(50004)) {\n            salary = (income - 0.12 * lowerLimit - 12500) / 0.48;\n          } // 3) Income above NI UEL\n          // 3a) Higher income rate\n          else if (income <= this.takeHomePay(100000)) {\n              salary = (income - 0.12 * lowerLimit - 7499.6) / 0.58;\n            } // 3b) Personal allowance reducing\n            else if (income <= this.takeHomePay(125000)) {\n                salary = (income - 0.12 * lowerLimit - 17499.6) / 0.48;\n              } // 3c) Personal allowance is zero\n              else if (income <= this.takeHomePay(150000)) {\n                  salary = (income - 0.12 * lowerLimit - 4999.6) / 0.58;\n                } // 3d) Highest rate\n                else {\n                    salary = (income - 0.12 * lowerLimit - 12499.6) / 0.53;\n                  }\n\n    return _.round(salary, 2);\n  }\n\n}\n\nconst taxYearInfo = {\n  _2019to2020: {\n    pA: 12500,\n    higherRateStart: 50000,\n    pAReductionStart: 100000,\n    additionalRateStart: 150000,\n    pAReductionRate: 0.5,\n    basicRate: 0.2,\n    higherRate: 0.4,\n    additionalRate: 0.45,\n    nILowerLimit: 719,\n    nIUpperLimit: 4167,\n    nILowerRate: 0.12,\n    nIUpperRate: 0.02\n  },\n  _2020to2021: {\n    pA: 12500,\n    higherRateStart: 50000,\n    pAReductionStart: 100000,\n    additionalRateStart: 150000,\n    pAReductionRate: 0.5,\n    basicRate: 0.2,\n    higherRate: 0.4,\n    additionalRate: 0.45,\n    nILowerLimit: 792,\n    nIUpperLimit: 4167,\n    nILowerRate: 0.12,\n    nIUpperRate: 0.02\n  }\n};\nexport const taxYear_2019to2020 = new Calculator(taxYearInfo._2019to2020);\nexport const taxYear_2020to2021 = new Calculator(taxYearInfo._2020to2021);\nconsole.log(taxYear_2019to2020.takeHomePay(145000));\nconsole.log(taxYear_2019to2020.salaryFromTakeHome(90134.96));\nconsole.log(taxYear_2020to2021.takeHomePay(145000));\nconsole.log(taxYear_2020to2021.salaryFromTakeHome(90240.08));","map":{"version":3,"sources":["/Users/josephtavinor/jtavinor_tax_calculator/src/reusableCalculator.js"],"names":["_","require","Calculator","constructor","taxYearInfo","pA","higherRateStart","pAReductionStart","additionalRateStart","pAReductionRate","basicRate","higherRate","additionalRate","nILowerLimit","nIUpperLimit","nILowerRate","nIUpperRate","salaryAtBasicRate","salary","reduction","Math","floor","salaryAtHigherRate","salaryAtAdditionalRate","incomeTax","round","nationalInsurance","lowerLimit","upperLimit","lowerRate","upperRate","nI","takeHomePay","salaryFromTakeHome","income","_2019to2020","_2020to2021","taxYear_2019to2020","taxYear_2020to2021","console","log"],"mappings":"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","sourcesContent":["const _ = require(\"lodash\");\n\nclass Calculator {\n  constructor(taxYearInfo) {\n    this.pA = taxYearInfo.pA;\n    this.higherRateStart = taxYearInfo.higherRateStart;\n    this.pAReductionStart = taxYearInfo.pAReductionStart;\n    this.additionalRateStart = taxYearInfo.additionalRateStart;\n    this.pAReductionRate = taxYearInfo.pAReductionRate;\n    this.basicRate = taxYearInfo.basicRate;\n    this.higherRate = taxYearInfo.higherRate;\n    this.additionalRate = taxYearInfo.additionalRate;\n    this.nILowerLimit = taxYearInfo.nILowerLimit;\n    this.nIUpperLimit = taxYearInfo.nIUpperLimit;\n    this.nILowerRate = taxYearInfo.nILowerRate;\n    this.nIUpperRate = taxYearInfo.nIUpperRate;\n  }\n\n  salaryAtBasicRate(salary) {\n    let salaryAtBasicRate;\n    if (salary <= this.higherRateStart) salaryAtBasicRate = salary - this.pA;\n    else if (salary <= this.pAReductionStart)\n      salaryAtBasicRate = this.higherRateStart - this.pA;\n    else if (salary <= this.pAReductionStart + this.pA / this.pAReductionRate) {\n      const reduction = Math.floor(\n        (salary - this.pAReductionStart) * this.pAReductionRate\n      );\n      salaryAtBasicRate = this.higherRateStart - this.pA + reduction;\n    } else salaryAtBasicRate = this.higherRateStart;\n\n    return salaryAtBasicRate;\n  }\n\n  salaryAtHigherRate(salary) {\n    let salaryAtHigherRate;\n    if (salary <= this.higherRateStart) salaryAtHigherRate = 0;\n    else if (salary <= this.additionalRateStart)\n      salaryAtHigherRate = salary - this.higherRateStart;\n    else salaryAtHigherRate = this.additionalRateStart - this.higherRateStart;\n\n    return salaryAtHigherRate;\n  }\n\n  salaryAtAdditionalRate(salary) {\n    return salary <= this.additionalRateStart\n      ? 0\n      : salary - this.additionalRateStart;\n  }\n\n  incomeTax(salary) {\n    let incomeTax =\n      this.salaryAtBasicRate(salary) * this.basicRate +\n      this.salaryAtHigherRate(salary) * this.higherRate +\n      this.salaryAtAdditionalRate(salary) * this.additionalRate;\n\n    incomeTax = _.round(incomeTax, 2);\n\n    return incomeTax;\n  }\n\n  nationalInsurance(salary) {\n    const lowerLimit = this.nILowerLimit * 12;\n    const upperLimit = this.nIUpperLimit * 12;\n    const lowerRate = this.nILowerRate;\n    const upperRate = this.nIUpperRate;\n    let nI;\n\n    if (salary <= lowerLimit) {\n      nI = 0;\n    } else if (salary <= upperLimit) {\n      nI = (salary - lowerLimit) * lowerRate;\n    } else {\n      nI =\n        (salary - upperLimit) * upperRate +\n        (upperLimit - lowerLimit) * lowerRate;\n    }\n\n    nI = _.round(nI, 2);\n    return nI;\n  }\n\n  takeHomePay(salary) {\n    return salary - this.incomeTax(salary) - this.nationalInsurance(salary);\n  }\n\n  salaryFromTakeHome(income) {\n    let salary;\n\n    const lowerLimit = this.nILowerLimit * 12;\n\n    // 1) Income less than NI lower limit\n    if (income <= lowerLimit) {\n      salary = income;\n    }\n\n    // 2) Income within NI Lower limit\n    // 2a) Income still in personal allowance\n    else if (income <= this.takeHomePay(12500)) {\n      salary = (25 * income - 3 * lowerLimit) / 22;\n    }\n    // 2b) Income within basic range\n    else if (income <= this.takeHomePay(50000)) {\n      salary = (25 * income - 3 * lowerLimit - 62500) / 17;\n    }\n    // 2c) Income within higher rate\n    else if (income <= this.takeHomePay(50004)) {\n      salary = (income - 0.12 * lowerLimit - 12500) / 0.48;\n    }\n\n    // 3) Income above NI UEL\n    // 3a) Higher income rate\n    else if (income <= this.takeHomePay(100000)) {\n      salary = (income - 0.12 * lowerLimit - 7499.6) / 0.58;\n    }\n    // 3b) Personal allowance reducing\n    else if (income <= this.takeHomePay(125000)) {\n      salary = (income - 0.12 * lowerLimit - 17499.6) / 0.48;\n    }\n\n    // 3c) Personal allowance is zero\n    else if (income <= this.takeHomePay(150000)) {\n      salary = (income - 0.12 * lowerLimit - 4999.6) / 0.58;\n    }\n    // 3d) Highest rate\n    else {\n      salary = (income - 0.12 * lowerLimit - 12499.6) / 0.53;\n    }\n\n    return _.round(salary, 2);\n  }\n}\n\nconst taxYearInfo = {\n  _2019to2020: {\n    pA: 12500,\n    higherRateStart: 50000,\n    pAReductionStart: 100000,\n    additionalRateStart: 150000,\n    pAReductionRate: 0.5,\n    basicRate: 0.2,\n    higherRate: 0.4,\n    additionalRate: 0.45,\n    nILowerLimit: 719,\n    nIUpperLimit: 4167,\n    nILowerRate: 0.12,\n    nIUpperRate: 0.02,\n  },\n\n  _2020to2021: {\n    pA: 12500,\n    higherRateStart: 50000,\n    pAReductionStart: 100000,\n    additionalRateStart: 150000,\n    pAReductionRate: 0.5,\n    basicRate: 0.2,\n    higherRate: 0.4,\n    additionalRate: 0.45,\n    nILowerLimit: 792,\n    nIUpperLimit: 4167,\n    nILowerRate: 0.12,\n    nIUpperRate: 0.02,\n  },\n};\n\nexport const taxYear_2019to2020 = new Calculator(taxYearInfo._2019to2020);\nexport const taxYear_2020to2021 = new Calculator(taxYearInfo._2020to2021);\n\nconsole.log(taxYear_2019to2020.takeHomePay(145000));\nconsole.log(taxYear_2019to2020.salaryFromTakeHome(90134.96));\n\nconsole.log(taxYear_2020to2021.takeHomePay(145000));\nconsole.log(taxYear_2020to2021.salaryFromTakeHome(90240.08));\n"]},"metadata":{},"sourceType":"module"}